{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: [],\n    totalQuantity: 0,\n    isOpened: false,\n    changed: false\n  },\n  reducers: {\n    close(state) {\n      state.isOpened = false;\n    },\n    toggle(state) {\n      state.isOpened = !state.isOpened;\n    },\n    replaceCart(state, action) {\n      state.totalQuantity = action.payload.totalQuantity;\n      state.items = action.payload.items;\n    },\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.itemId === newItem.id);\n      state.totalQuantity++;\n      state.changed = true;\n      if (!existingItem) {\n        state.items.push({\n          itemId: newItem.id,\n          quantity: 1\n        });\n      } else {\n        existingItem.quantity = existingItem.quantity + 1;\n      }\n    },\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => +item.itemId === id);\n      // console.log(existingItem)\n      if (existingItem === undefined) {\n        return;\n      }\n      state.totalQuantity--;\n      state.changed = true;\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.itemId !== id);\n      } else {\n        existingItem.quantity--;\n      }\n    },\n    deleteItemFromCart(state, action) {\n      const id = action.payload;\n      const item = state.items.find(item => +item.itemId === id);\n      state.totalQuantity = state.totalQuantity - item.quantity;\n      state.changed = true;\n      state.items = state.items.filter(item => item.itemId !== id);\n    },\n    clearCartItems(state) {\n      state.totalQuantity = 0;\n      state.changed = true;\n      state.items = [];\n    }\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","cartSlice","name","initialState","items","totalQuantity","isOpened","changed","reducers","close","state","toggle","replaceCart","action","payload","addItemToCart","newItem","existingItem","find","item","itemId","id","push","quantity","removeItemFromCart","undefined","filter","deleteItemFromCart","clearCartItems","cartActions","actions"],"sources":["D:/programming/web/React/MyReact/you-car/src/store/cart-slice.js"],"sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\";\n\nconst cartSlice = createSlice({\n    name: 'cart',\n    initialState: {\n        items: [],\n        totalQuantity: 0,\n        isOpened: false,\n        changed: false\n    },\n    reducers: {\n        close(state) {\n            state.isOpened = false;\n        },\n        toggle(state) {\n            state.isOpened = !state.isOpened;\n        },\n        replaceCart(state, action) {\n            state.totalQuantity = action.payload.totalQuantity;\n            state.items = action.payload.items;\n        },\n        addItemToCart(state, action) {\n            const newItem = action.payload;\n            const existingItem = state.items.find((item) => item.itemId === newItem.id);\n            state.totalQuantity++;\n            state.changed = true;\n            if (!existingItem) {\n                state.items.push({\n                    itemId: newItem.id,\n                    quantity: 1,\n\n                });\n            } else {\n                existingItem.quantity = existingItem.quantity + 1;\n            }\n        },\n        removeItemFromCart(state, action) {\n            const id = action.payload;\n            const existingItem = state.items.find(item => +item.itemId === id);\n            // console.log(existingItem)\n            if (existingItem === undefined) {\n                return;\n            }\n            state.totalQuantity--;\n            state.changed = true;\n            if (existingItem.quantity === 1) {\n                state.items = state.items.filter(item => item.itemId !== id);\n            } else {\n                existingItem.quantity--;\n            }\n        },\n        deleteItemFromCart(state, action) {\n            const id = action.payload;\n            const item = state.items.find(item => +item.itemId === id);\n            state.totalQuantity = state.totalQuantity - item.quantity;\n            state.changed = true;\n            state.items = state.items.filter(item => item.itemId !== id);\n        },\n        clearCartItems(state) {\n            state.totalQuantity = 0;\n            state.changed = true;\n            state.items = [];\n        }\n    }\n});\n\nexport const cartActions = cartSlice.actions;\n\nexport default cartSlice;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}